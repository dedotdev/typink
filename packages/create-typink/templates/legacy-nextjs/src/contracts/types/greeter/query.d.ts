// Generated by dedot cli

import type { GenericSubstrateApi } from 'dedot/types';
import type { Result } from 'dedot/codecs';
import type {
  GenericContractQuery,
  GenericContractQueryCall,
  ContractCallOptions,
  GenericContractCallResult,
  ContractCallResult,
  MetadataType,
} from 'dedot/contracts';
import type { InkPrimitivesLangError } from './types.js';

export interface ContractQuery<ChainApi extends GenericSubstrateApi, Type extends MetadataType>
  extends GenericContractQuery<ChainApi, Type> {
  /**
   * Returns the current value of `message`.
   *
   * @param {ContractCallOptions} options
   *
   * @selector 0x052cda08
   **/
  greet: GenericContractQueryCall<
    ChainApi,
    (options?: ContractCallOptions) => Promise<GenericContractCallResult<string, ContractCallResult<ChainApi>>>,
    Type
  >;

  /**
   * Sets `message` to the given value.
   *
   * @param {string} newValue
   * @param {ContractCallOptions} options
   *
   * @selector 0x1fe7426f
   **/
  setMessage: GenericContractQueryCall<
    ChainApi,
    (
      newValue: string,
      options?: ContractCallOptions,
    ) => Promise<GenericContractCallResult<[], ContractCallResult<ChainApi>>>,
    Type
  >;
}
